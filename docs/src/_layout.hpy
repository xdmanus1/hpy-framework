<!-- docs/src/_layout.hpy -->
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/brython@{{ BRYTHON_VERSION }}/brython.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/brython@{{ BRYTHON_VERSION }}/brython_stdlib.js"></script>
    <link rel="stylesheet" href="static/docs.css">
    <title>HPY Tool Documentation</title>
    <style>
        /* ... existing styles ... */
    </style>
</head>
<body onload="brython({{'debug': 0}})">
    <div class="docs-container">
        <aside class="sidebar">
            <h2>HPY Tool Docs</h2>
            <nav>
                <ul>
                    <li><a href="index.html" id="nav-index">Introduction</a></li>
                    <li><a href="getting-started.html" id="nav-getting-started">Getting Started</a></li>
                    <li><a href="configuration.html" id="nav-configuration">Configuration (hpy.toml)</a></li>
                    <li><a href="static-assets.html" id="nav-static-assets">Static Assets</a></li>
                    <li><a href="hpy-files.html" id="nav-hpy-files">.hpy File Structure</a></li>
                    <li><a href="cli-usage.html" id="nav-cli-usage">CLI Usage</a></li>
                </ul>
            </nav>
        </aside>
        <main class="content">
            <!-- HPY_PAGE_CONTENT -->
        </main>
    </div>

    <footer>
        <p>HPY Tool Documentation | BSD 3-Clause Licensed</p>
    </footer>

<script type="text/python">
# Refined Python script in _layout.hpy (v3) <--- NO LEADING SPACES on this line
from browser import window, document
import sys # For potential exception printing

try:
    # --- Get current page filename ---
    current_pathname = window.location.pathname
    # Remove trailing slash if present
    if current_pathname.endswith('/'):
        current_pathname = current_pathname[:-1]
    # Get the last part of the path
    current_page_filename = current_pathname.split('/')[-1]
    # If the last part is empty or the repo name, assume it's index.html
    # Adjust 'hpy-framework' if your repo name differs and causes issues
    if not current_page_filename or current_page_filename == 'hpy-framework':
        current_page_filename = 'index.html'

    # --- Iterate through links ---
    nav_links = document.select('.sidebar nav a')
    active_link_found = False

    for link in nav_links:
        link_href = link.attrs.get('href', '')
        # Get the filename part from the href (should be simple like 'page.html')
        link_page_filename = link_href.split('/')[-1]
        if not link_page_filename: # Handle case href="/"
             link_page_filename = 'index.html'

        # --- Debugging ---
        # print(f"Current URL Filename: '{current_page_filename}', Link Filename: '{link_page_filename}' (Href: '{link_href}')")
        # --- End Debugging ---

        # Compare filenames directly
        if current_page_filename == link_page_filename:
            link.classList.add('active')
            document.title = f"{link.text} | HPY Tool Docs" # Set title
            active_link_found = True
            # Don't break here if multiple links could potentially match break

    # If after checking all links, none matched BUT we are on the root, activate index
    if not active_link_found and current_page_filename == 'index.html':
         index_link = document.select_one('a[href="index.html"]') # Use specific selector
         if index_link:
              index_link.classList.add('active')
              # Ensure title is set for index if accessed via root path
              if document.title == "HPY Tool Documentation":
                   document.title = f"{index_link.text} | HPY Tool Docs"


    # Final check: If title is still the default, maybe set it based on h1?
    if document.title == "HPY Tool Documentation":
         main_h1 = document.select_one('.content h1')
         if main_h1:
              document.title = f"{main_h1.text} | HPY Tool Docs"


except Exception as e:
    # Log any error during script execution to the console
    print(f"Error in layout navigation script: {e}", file=sys.stderr)

print("Docs layout script loaded.")
</script> # Make sure this closing tag is aligned as needed

</body>
</html>